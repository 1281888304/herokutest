{"ast":null,"code":"var _jsxFileName = \"/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Square } from \"./Square\";\nimport './Board.css';\nimport { useSelector } from 'react-redux';\nimport ResetButton from './ResetButton';\nimport ResetGameBoardOnly from './ResetGameBoardOnlyFunction';\nimport { useParams } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { BoardClickCountContext } from './BoardClickCountProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n\n  const [clickCountGlobalState, countDispatch] = useContext(BoardClickCountContext);\n  const dispatch = useDispatch();\n  const gameType = useParams().gameType;\n  const clickCount = useSelector(state => state.clickCount);\n  const boardState = useSelector(state => state.game); // useEffect(() => dispatch({type: \"CREATE_GAME_BOARD\", gameType}), [])\n\n  const boardComponent = [];\n\n  for (let i = 0; i < boardState.length; i++) {\n    let row = boardState[i];\n\n    for (let j = 0; j < row.length; j++) {\n      boardComponent.push( /*#__PURE__*/_jsxDEV(Square, {\n        symbol: boardState[i][j],\n        x: i,\n        y: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 34\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"This is an \" + gameType + \" game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: clickCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Global State Counter: \" + clickCountGlobalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"board\",\n      children: boardComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {\n      text: \"Reset, pls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResetGameBoardOnly, {\n      text: \"Game board only, pls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"M3coSNnvPLxxgOXfY9Pbopj+bLs=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/Board.jsx"],"names":["React","useContext","useEffect","useState","Square","useSelector","ResetButton","ResetGameBoardOnly","useParams","useDispatch","BoardClickCountContext","Board","clickCountGlobalState","countDispatch","dispatch","gameType","clickCount","state","boardState","game","boardComponent","i","length","row","j","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,aAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,sBAAT,QAAuC,2BAAvC;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE5B,QAAM,CAACC,qBAAD,EAAwBC,aAAxB,IAAyCZ,UAAU,CAACS,sBAAD,CAAzD;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGP,SAAS,GAAGO,QAA7B;AACA,QAAMC,UAAU,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,UAAlB,CAA9B;AACA,QAAME,UAAU,GAAGb,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAA9B,CAN4B,CAQ5B;;AAEA,QAAMC,cAAc,GAAG,EAAvB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACI,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,QAAIE,GAAG,GAAGL,UAAU,CAACG,CAAD,CAApB;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACD,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACjCJ,MAAAA,cAAc,CAACK,IAAf,eAAqB,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEP,UAAU,CAACG,CAAD,CAAV,CAAcG,CAAd,CAAhB;AAAkC,QAAA,CAAC,EAAEH,CAArC;AAAwC,QAAA,CAAC,EAAEG;AAA3C;AAAA;AAAA;AAAA;AAAA,cAArB;AACH;AACJ;;AAED,sBACI;AAAA,4BACI;AAAA,gBAAK,gBAAgBT,QAAhB,GAA2B;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAK,2BAA2BJ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAIQ;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA,gBACHQ;AADG;AAAA;AAAA;AAAA;AAAA,YAJR,eAOI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,kBAAD;AAAoB,MAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA/BuBT,K;UAGHF,W,EACAD,S,EACEH,W,EACAA,W;;;KANCM,K","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Square } from \"./Square\"\nimport './Board.css'\nimport { useSelector } from 'react-redux';\nimport ResetButton from './ResetButton';\nimport ResetGameBoardOnly from './ResetGameBoardOnlyFunction'\nimport { useParams } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { BoardClickCountContext } from './BoardClickCountProvider';\n\nexport default function Board() {\n\n    const [clickCountGlobalState, countDispatch] = useContext(BoardClickCountContext);\n    const dispatch = useDispatch()\n    const gameType = useParams().gameType;\n    const clickCount = useSelector((state) => state.clickCount)\n    const boardState = useSelector((state) => state.game)\n\n    // useEffect(() => dispatch({type: \"CREATE_GAME_BOARD\", gameType}), [])\n\n    const boardComponent = [];\n\n    for (let i = 0; i < boardState.length; i++) {\n        let row = boardState[i];\n        for (let j = 0; j < row.length; j++) {\n            boardComponent.push((<Square symbol={boardState[i][j]} x={i} y={j} />))\n        }\n    }\n\n    return (\n        <div>\n            <h3>{\"This is an \" + gameType + \" game\"}</h3>\n            <h1>{clickCount}</h1>\n            <h1>{\"Global State Counter: \" + clickCountGlobalState}</h1>\n                <div id=\"board\">\n            {boardComponent}\n            </div>\n            <ResetButton text=\"Reset, pls\"/>\n            <ResetGameBoardOnly text=\"Game board only, pls\" />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}