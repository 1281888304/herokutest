[{"/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/index.js":"1","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/reducers/reducers.js":"2","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/Board.jsx":"3","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/WelcomePage.jsx":"4","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/BoardClickCountProvider.jsx":"5","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/reducers/gameReducer.js":"6","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/reducers/clickReducer.js":"7","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/Square.jsx":"8","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/ResetButton.jsx":"9","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/ResetGameBoardOnlyFunction.jsx":"10"},{"size":858,"mtime":1636088727409,"results":"11","hashOfConfig":"12"},{"size":214,"mtime":1636088727410,"results":"13","hashOfConfig":"12"},{"size":1484,"mtime":1636088727406,"results":"14","hashOfConfig":"12"},{"size":270,"mtime":1636088727408,"results":"15","hashOfConfig":"12"},{"size":499,"mtime":1636088727407,"results":"16","hashOfConfig":"12"},{"size":1002,"mtime":1636088727409,"results":"17","hashOfConfig":"12"},{"size":216,"mtime":1636088727409,"results":"18","hashOfConfig":"12"},{"size":1658,"mtime":1636088727408,"results":"19","hashOfConfig":"12"},{"size":354,"mtime":1636088727407,"results":"20","hashOfConfig":"12"},{"size":369,"mtime":1636088727407,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c9m6u6",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/index.js",[],"/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/reducers/reducers.js",[],"/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/Board.jsx",["44","45","46","47"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Square } from \"./Square\"\nimport './Board.css'\nimport { useSelector } from 'react-redux';\nimport ResetButton from './ResetButton';\nimport ResetGameBoardOnly from './ResetGameBoardOnlyFunction'\nimport { useParams } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { BoardClickCountContext } from './BoardClickCountProvider';\n\nexport default function Board() {\n\n    const [clickCountGlobalState, countDispatch] = useContext(BoardClickCountContext);\n    const dispatch = useDispatch()\n    const gameType = useParams().gameType;\n    const clickCount = useSelector((state) => state.clickCount)\n    const boardState = useSelector((state) => state.game)\n\n    // useEffect(() => dispatch({type: \"CREATE_GAME_BOARD\", gameType}), [])\n\n    const boardComponent = [];\n\n    for (let i = 0; i < boardState.length; i++) {\n        let row = boardState[i];\n        for (let j = 0; j < row.length; j++) {\n            boardComponent.push((<Square symbol={boardState[i][j]} x={i} y={j} />))\n        }\n    }\n\n    return (\n        <div>\n            <h3>{\"This is an \" + gameType + \" game\"}</h3>\n            <h1>{clickCount}</h1>\n            <h1>{\"Global State Counter: \" + clickCountGlobalState}</h1>\n                <div id=\"board\">\n            {boardComponent}\n            </div>\n            <ResetButton text=\"Reset, pls\"/>\n            <ResetGameBoardOnly text=\"Game board only, pls\" />\n        </div>\n    )\n}","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/WelcomePage.jsx",[],"/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/BoardClickCountProvider.jsx",[],"/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/reducers/gameReducer.js",[],"/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/reducers/clickReducer.js",[],"/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/Square.jsx",["48","49","50"],"// import SmallerSquare from \"./SmallerSquare\";\nimport React, { useContext, useReducer } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BoardClickCountContext } from './BoardClickCountProvider';\nimport './Square.css';\n\n\nfunction exclamationReducer(state, action) {\n\n\n    if (action.type === \"CLICK\") {\n        if (action.symbol === 'X') {\n            return '!'\n        } else {\n            return '?'\n        }\n    }\n    return state;\n}\n\nexport function Square(props) {\n    const [globalCountState, globalCountDispatch] = useContext(BoardClickCountContext);\n\n    const symbol = props.symbol;\n    // useEffect(() => alert(symbol + \" just played\"), [symbol]);\n    \n    // const [state, setState] = useState(props.symbol);\n    let borderColor = 'purpleBorder';\n    if (symbol === '0') {\n        borderColor = 'blueBorder';\n    } else if (symbol === '') {\n        borderColor = 'blackBorder';\n    }\n\n    const dispatch = useDispatch();\n\n    return (<div onClick={() => {\n        dispatch({\n            type: 'boardClick',\n            x: props.x,\n            y: props.y,\n        })\n        globalCountDispatch({\n            type: \"boardClick\",\n            symbol,\n        })\n    }\n    } id=\"square\" class={borderColor}>\n        {symbol}\n    </div>);\n}\n\n   // if (state === 'X') {\n    //     setState('0');\n    // } else if (state === '0') {\n    //     setState('');\n    // } else {\n    //     setState('X')\n    // }\n\n// export function SmallerSquare(props) {\n//     const [countState, setCountState] = useState(0)\n//     return (<div onClick={() => setCountState(100 + countState)}>\n//         Click Count: {countState}\n//         </div>)\n// }","/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/ResetButton.jsx",[],"/Users/zhangqinghang/Desktop/CS5610/cs5610_fall2021_mod2-1/src/ResetGameBoardOnlyFunction.jsx",[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":29,"nodeType":"53","messageId":"54","endLine":1,"endColumn":38},{"ruleId":"51","severity":1,"message":"55","line":1,"column":40,"nodeType":"53","messageId":"54","endLine":1,"endColumn":48},{"ruleId":"51","severity":1,"message":"56","line":13,"column":35,"nodeType":"53","messageId":"54","endLine":13,"endColumn":48},{"ruleId":"51","severity":1,"message":"57","line":14,"column":11,"nodeType":"53","messageId":"54","endLine":14,"endColumn":19},{"ruleId":"51","severity":1,"message":"58","line":2,"column":29,"nodeType":"53","messageId":"54","endLine":2,"endColumn":39},{"ruleId":"51","severity":1,"message":"59","line":8,"column":10,"nodeType":"53","messageId":"54","endLine":8,"endColumn":28},{"ruleId":"51","severity":1,"message":"60","line":22,"column":12,"nodeType":"53","messageId":"54","endLine":22,"endColumn":28},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'countDispatch' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useReducer' is defined but never used.","'exclamationReducer' is defined but never used.","'globalCountState' is assigned a value but never used."]